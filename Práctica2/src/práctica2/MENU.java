/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package práctica2;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author marco
 */
public class MENU extends javax.swing.JFrame {
static int CONT1=0,CONTDATOS=0; 
static DATA DATOSGRA[]=new DATA[1];
static DATA AUX[]=new DATA[1];
static String title;
static  ChartPanel pan;
    

    public MENU() {
        initComponents();
        buttonGroup1.add(Up);
        buttonGroup1.add(Down);
        buttonGroup2.add(Shell);
        buttonGroup2.add(Bub);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Up = new javax.swing.JRadioButton();
        Down = new javax.swing.JRadioButton();
        Bub = new javax.swing.JRadioButton();
        Shell = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton1.setText("Examinar...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 44, -1, -1));

        jButton2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton2.setText("Generar Gráfica");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 97, -1, -1));

        buttonGroup1.add(Up);
        Up.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Up.setText("Ascendente");
        Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpActionPerformed(evt);
            }
        });
        getContentPane().add(Up, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, -1, -1));

        buttonGroup1.add(Down);
        Down.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Down.setText("Descendente");
        getContentPane().add(Down, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, -1, -1));

        buttonGroup2.add(Bub);
        Bub.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Bub.setText("Bubble Sort");
        Bub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BubActionPerformed(evt);
            }
        });
        getContentPane().add(Bub, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, 100, -1));

        buttonGroup2.add(Shell);
        Shell.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Shell.setText("Shell Sort");
        getContentPane().add(Shell, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 90, -1));

        jButton3.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton3.setText("Ordenar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, -1, -1));

        jTextField1.setText("Ruta_de_Archivo");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 44, 240, -1));

        jTextField2.setText("Título");
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 97, 240, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, -1, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 199, -1));

        jButton4.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton4.setText("Cerrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File F =chooser.getSelectedFile();
        String filename=F.getAbsolutePath();
        jTextField1.setText(filename);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String RUTALEER=jTextField1.getText().trim();
         
         if (jTextField2.getText().equals("")) {
             JOptionPane.showMessageDialog(null, "Debe llenar todos los Campos");
         } else {
           try {
                    
                    FileReader fr=new FileReader(RUTALEER);
                    BufferedReader br=new BufferedReader(fr);
                    
                    String linea;
                    while ((linea=br.readLine())!= null) {
                       CONT1++;  
                    }
                    
                    System.out.println("el contador es :"+CONT1);
                    DATOSGRA=new DATA[CONT1];
                    AUX=new DATA[CONT1];
                    System.out.println("se seteo el tamaño "+DATOSGRA.length);
                    
                    FileReader LR=new FileReader(RUTALEER);
                   BufferedReader bF=new BufferedReader(LR);
                   
                   String linea2;
                    while ((linea2=bF.readLine())!= null) {
                       String [] datos2=linea2.split(",");
                       String CATEGO=datos2[0];
                       String CANTI=datos2[1];
                      DATOSGRA[CONTDATOS]=new DATA(CATEGO, CANTI);
                      AUX[CONTDATOS]=new DATA(CATEGO, CANTI);
                       CONTDATOS++;         
                      
                    }
        
                } catch (Exception e2) {
                  e2.getStackTrace();
                }
                
                 for (int i = 0; i <DATOSGRA.length-1; i++) {
                        System.out.println("CATEGORIA:"+ DATOSGRA[i].getCATEGORIA());
                        System.out.println("CANTIDAD:"+ DATOSGRA[i].getCANTIDAD());
                        System.out.println("************************************");
                    }
                 System.out.println("el segundo contador es: "+CONTDATOS);
  //BUB();
   JFreeChart barras=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DATOSGRA[0].getCANTIDAD();
       String X =DATOSGRA[0].getCATEGORIA();
        title=jTextField2.getText();
        for (int i = 1; i < DATOSGRA.length-1; i++) {
        float cantidad=Float.parseFloat(DATOSGRA[i].getCANTIDAD());
        String categoria=DATOSGRA[i].getCATEGORIA();
        datos.addValue(cantidad, "", categoria);
    }
      
       barras=ChartFactory.createBarChart(title, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
      
       ChartPanel panel = new ChartPanel(barras);
       panel.setPreferredSize(new Dimension(400,200));
       jPanel1.setLayout(new BorderLayout());
       jPanel1.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen4 = new BufferedImage(jPanel1.getWidth(), jPanel1.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel1.paint(imagen4.getGraphics());
            ImageIO.write(imagen4, "png", new File("inicial.png"));
        } catch (Exception e) {
        }
         }
                
       
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(Up.isSelected() && Bub.isSelected()){
            String auxCAT;
String auxCANT;
        //APLICANDO EL ORDENAMIENTO BURBUJA
        for (int i = 1; i < (CONTDATOS - 1); i++) {
            for (int j = 1; j < (CONTDATOS - 1); j++) {
                float num1=Float.parseFloat(DATOSGRA[j].getCANTIDAD());
                float num2=Float.parseFloat(DATOSGRA[j + 1].getCANTIDAD());
                if (num1 > num2) {
                    //OBTENIENDO VALORES Y GUARDANDOLOS
                    auxCANT = DATOSGRA[j].getCANTIDAD();
                    auxCAT = DATOSGRA[j].getCATEGORIA();
                    
                    //SETEANDO LA POSICION ACTUAL EL VALOR  DE LA POSICION SIGUIENTE
                    
                    DATOSGRA[j].setCANTIDAD(DATOSGRA[j + 1].getCANTIDAD());
                    DATOSGRA[j].setCATEGORIA(DATOSGRA[j + 1].getCATEGORIA());
                   
                    
                    //SETEANDO LA POSICION SIGUIENTE CON LA POSICION ACTUAL
                    DATOSGRA[j + 1].setCANTIDAD(auxCANT);
                    DATOSGRA[j + 1].setCATEGORIA(auxCAT);
                   
                }
            }
        }
 System.out.println("DATOS ORDENADOS POR CANTIDAD: ");
        System.out.println("************************************");
        for (int i =0; i<CONTDATOS; i++) {
            System.out.println(" CANTIDAD: " + DATOSGRA[i].getCANTIDAD());
            System.out.println(" CATEGORIA: " + DATOSGRA[i].getCATEGORIA());
           
            System.out.println("************************************");
        }
        //BUB();
   JFreeChart barras=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DATOSGRA[0].getCANTIDAD();
       String X =DATOSGRA[0].getCATEGORIA();
        title=jTextField2.getText();
        for (int i = 1; i < DATOSGRA.length-1; i++) {
        float cantidad=Float.parseFloat(DATOSGRA[i].getCANTIDAD());
        String categoria=DATOSGRA[i].getCATEGORIA();
        datos.addValue(cantidad, "", categoria);
    }
      
       barras=ChartFactory.createBarChart(title, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
      
       ChartPanel panel = new ChartPanel(barras);
       panel.setPreferredSize(new Dimension(400,200));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen4 = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen4.getGraphics());
            ImageIO.write(imagen4, "png", new File("final.png"));
        } catch (Exception e) {
        }
        }
        else if (Down.isSelected() && Bub.isSelected()){
             String auxCAT;
String auxCANT;
        //APLICANDO EL ORDENAMIENTO BURBUJA
        for (int i = 1; i < (CONTDATOS - 1); i++) {
            for (int j = 1; j < (CONTDATOS - 1); j++) {
                float num1=Float.parseFloat(DATOSGRA[j].getCANTIDAD());
                float num2=Float.parseFloat(DATOSGRA[j + 1].getCANTIDAD());
                if (num1 < num2) {
                    //OBTENIENDO VALORES Y GUARDANDOLOS
                    auxCANT = DATOSGRA[j].getCANTIDAD();
                    auxCAT = DATOSGRA[j].getCATEGORIA();
                    
                    //SETEANDO LA POSICION ACTUAL EL VALOR  DE LA POSICION SIGUIENTE
                    
                    DATOSGRA[j].setCANTIDAD(DATOSGRA[j + 1].getCANTIDAD());
                    DATOSGRA[j].setCATEGORIA(DATOSGRA[j + 1].getCATEGORIA());
                   
                    
                    //SETEANDO LA POSICION SIGUIENTE CON LA POSICION ACTUAL
                    DATOSGRA[j + 1].setCANTIDAD(auxCANT);
                    DATOSGRA[j + 1].setCATEGORIA(auxCAT);
                   
                }
            }
        }
 System.out.println("DATOS ORDENADOS POR CANTIDAD: ");
        System.out.println("************************************");
        for (int i =0; i<CONTDATOS; i++) {
            System.out.println(" CANTIDAD: " + DATOSGRA[i].getCANTIDAD());
            System.out.println(" CATEGORIA: " + DATOSGRA[i].getCATEGORIA());
           
            System.out.println("************************************");
        }
        //BUB();
   JFreeChart barras=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DATOSGRA[0].getCANTIDAD();
       String X =DATOSGRA[0].getCATEGORIA();
        title=jTextField2.getText();
        for (int i = 1; i < DATOSGRA.length-1; i++) {
        float cantidad=Float.parseFloat(DATOSGRA[i].getCANTIDAD());
        String categoria=DATOSGRA[i].getCATEGORIA();
        datos.addValue(cantidad, "", categoria);
    }
      
       barras=ChartFactory.createBarChart(title, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
      
       ChartPanel panel = new ChartPanel(barras);
       panel.setPreferredSize(new Dimension(400,200));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen4 = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen4.getGraphics());
            ImageIO.write(imagen4, "png", new File("final.png"));
        } catch (Exception e) {
        }
        }
        else if(Up.isSelected() && Shell.isSelected()){
            int salto, j, k;
            float auxcant, auxcant2;
            String AUXCANT;
            String AUXCAT;

            salto = ((CONTDATOS - 1) / 2);
            while (salto > 0) {
                for (int i = salto + 1; i < CONTDATOS; i++) {
                    j = (i - salto);
                    while (j >= 1) {

                        auxcant = Float.parseFloat(DATOSGRA[j].getCANTIDAD());
                        auxcant2 = Float.parseFloat(DATOSGRA[j + salto].getCANTIDAD());

                        if (auxcant <= auxcant2) {
                            break;
                        } else {
                            AUXCANT = DATOSGRA[j].getCANTIDAD();
                            AUXCAT = DATOSGRA[j].getCATEGORIA();

                            DATOSGRA[j].setCANTIDAD(DATOSGRA[j + salto].getCANTIDAD());
                            DATOSGRA[j].setCATEGORIA(DATOSGRA[j + salto].getCATEGORIA());

                            DATOSGRA[j + salto].setCANTIDAD(AUXCANT);
                            DATOSGRA[j + salto].setCATEGORIA(AUXCAT);
                            j = j - salto;
                        }

                    }
                }
                salto = salto / 2;
            }

            for (int i = 0; i < DATOSGRA.length - 1; i++) {
                System.out.println(" CANTIDAD: " + DATOSGRA[i].getCANTIDAD());
                System.out.println(" CATEGORIA: " + DATOSGRA[i].getCATEGORIA());
                System.out.println("************************************");

            }
             //BUB();
   JFreeChart barras=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DATOSGRA[0].getCANTIDAD();
       String X =DATOSGRA[0].getCATEGORIA();
        title=jTextField2.getText();
        for (int i = 1; i < DATOSGRA.length-1; i++) {
        float cantidad=Float.parseFloat(DATOSGRA[i].getCANTIDAD());
        String categoria=DATOSGRA[i].getCATEGORIA();
        datos.addValue(cantidad, "", categoria);
    }
      
       barras=ChartFactory.createBarChart(title, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
      
       ChartPanel panel = new ChartPanel(barras);
       panel.setPreferredSize(new Dimension(400,200));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen4 = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen4.getGraphics());
            ImageIO.write(imagen4, "png", new File("final.png"));
        } catch (Exception e) {
        }
        }
        else if(Down.isSelected() && Shell.isSelected()){
            int salto, j;
            float auxcant, auxcant2;
            String AUXCANT;
            String AUXCAT;

            salto = ((CONTDATOS - 1) / 2);
            while (salto > 0) {
                for (int i = salto + 1; i < CONTDATOS; i++) {
                    j = (i - salto);
                    while (j >= 1) {

                        auxcant = Float.parseFloat(DATOSGRA[j].getCANTIDAD());
                        auxcant2 = Float.parseFloat(DATOSGRA[j + salto].getCANTIDAD());

                        if (auxcant >= auxcant2) {
                            break;
                        } else {

                            AUXCANT = DATOSGRA[j].getCANTIDAD();
                            AUXCAT = DATOSGRA[j].getCATEGORIA();

                            DATOSGRA[j].setCANTIDAD(DATOSGRA[j + salto].getCANTIDAD());
                            DATOSGRA[j].setCATEGORIA(DATOSGRA[j + salto].getCATEGORIA());

                            DATOSGRA[j + salto].setCANTIDAD(AUXCANT);
                            DATOSGRA[j + salto].setCATEGORIA(AUXCAT);
                            j = j - salto;
                        }

                    }
                }
                salto = salto / 2;
            }

            for (int i = 0; i < DATOSGRA.length - 1; i++) {
                System.out.println(" CANTIDAD: " + DATOSGRA[i].getCANTIDAD());
                System.out.println(" CATEGORIA: " + DATOSGRA[i].getCATEGORIA());
                System.out.println("************************************");

            }
            //BUB();
   JFreeChart barras=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DATOSGRA[0].getCANTIDAD();
       String X =DATOSGRA[0].getCATEGORIA();
        title=jTextField2.getText();
        for (int i = 1; i < DATOSGRA.length-1; i++) {
        float cantidad=Float.parseFloat(DATOSGRA[i].getCANTIDAD());
        String categoria=DATOSGRA[i].getCATEGORIA();
        datos.addValue(cantidad, "", categoria);
    }
      
       barras=ChartFactory.createBarChart(title, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
      
       ChartPanel panel = new ChartPanel(barras);
       panel.setPreferredSize(new Dimension(400,200));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen4 = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen4.getGraphics());
            ImageIO.write(imagen4, "png", new File("final.png"));
        } catch (Exception e) {
        }
        }
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void BubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BubActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MENU().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Bub;
    private javax.swing.JRadioButton Down;
    private javax.swing.JRadioButton Shell;
    private javax.swing.JRadioButton Up;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
