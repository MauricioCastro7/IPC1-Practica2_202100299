/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package práctica2;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author marco
 */
public class MENU extends javax.swing.JFrame {
static int CONT1=0,CONTI=0; 
static DATA DAG[]=new DATA[1];
static DATA AX[]=new DATA[1];
static String titulo;
static  ChartPanel pan;
    

    public MENU() {
        initComponents();
        buttonGroup1.add(Up);
        buttonGroup1.add(Down);
        buttonGroup2.add(Shell);
        buttonGroup2.add(Bub);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Up = new javax.swing.JRadioButton();
        Down = new javax.swing.JRadioButton();
        Bub = new javax.swing.JRadioButton();
        Shell = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton1.setText("Examinar...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 44, -1, -1));

        jButton2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton2.setText("Generar Gráfica");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 97, -1, -1));

        buttonGroup1.add(Up);
        Up.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Up.setText("Ascendente");
        Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpActionPerformed(evt);
            }
        });
        getContentPane().add(Up, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, -1, -1));

        buttonGroup1.add(Down);
        Down.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Down.setText("Descendente");
        getContentPane().add(Down, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, -1, -1));

        buttonGroup2.add(Bub);
        Bub.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Bub.setText("Bubble Sort");
        Bub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BubActionPerformed(evt);
            }
        });
        getContentPane().add(Bub, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, 100, -1));

        buttonGroup2.add(Shell);
        Shell.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Shell.setText("Shell Sort");
        Shell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShellActionPerformed(evt);
            }
        });
        getContentPane().add(Shell, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, 90, -1));

        jButton3.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton3.setText("Ordenar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, -1, -1));

        jTextField1.setText("Ruta_de_Archivo");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 44, 240, -1));

        jTextField2.setText("Título");
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 97, 240, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, -1, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 199, -1));

        jButton4.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton4.setText("Cerrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, -1, -1));

        jButton5.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jButton5.setText("Reporte");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 280, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File F =chooser.getSelectedFile();
        String filename=F.getAbsolutePath();
        jTextField1.setText(filename);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String LEER=jTextField1.getText().trim();
         
         if (jTextField2.getText().equals("")) {
             JOptionPane.showMessageDialog(null, "Llene todos los Campos");
         } else {
           try {
                    
                    FileReader lec=new FileReader(LEER);
                    BufferedReader tor=new BufferedReader(lec);
                    
                    String line;
                    while ((line=tor.readLine())!= null) {
                       CONT1++;  
                    }
                    
                    System.out.println("CANTIDAD DE DATOS :"+CONT1);
                    DAG=new DATA[CONT1];
                    AX=new DATA[CONT1];
                    System.out.println("TAMAÑO DE SETEO: "+DAG.length);
                    
                    FileReader LEC =new FileReader(LEER);
                   BufferedReader BUF=new BufferedReader(LEC);
                   
                   String line2;
                    while ((line2=BUF.readLine())!= null) {
                       String [] datos2=line2.split(",");
                       String CATEGO=datos2[0];
                       String CANTI=datos2[1];
                      DAG[CONTI]=new DATA(CATEGO, CANTI);
                      AX[CONTI]=new DATA(CATEGO, CANTI);
                       CONTI++;         
                      
                    }
        
                } catch (Exception e2) {
                  e2.getStackTrace();
                }
                
                 for (int i = 0; i <DAG.length-1; i++) {
                        System.out.println("PAÍS:"+ DAG[i].getCATO());
                        System.out.println("CANTIDAD:"+ DAG[i].getCANTI());
                        System.out.println("----------");
                    }
                 System.out.println("TAMAÑO: "+CONTI);
   JFreeChart filas=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DAG[0].getCANTI();
       String X =DAG[0].getCATO();
        titulo=jTextField2.getText();
        for (int i = 1; i < DAG.length-1; i++) {
        float can=Float.parseFloat(DAG[i].getCANTI());
        String cate=DAG[i].getCATO();
        datos.addValue(can, "", cate);
    }
      
       filas=ChartFactory.createBarChart3D(titulo, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
       
       ChartPanel panel = new ChartPanel(filas);
       panel.setPreferredSize(new Dimension(350,150));
       jPanel1.setLayout(new BorderLayout());
       jPanel1.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen = new BufferedImage(jPanel1.getWidth(), jPanel1.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel1.paint(imagen.getGraphics());
            ImageIO.write(imagen, "png", new File("Desordenada.png"));
        } catch (Exception e) {
        }
         }
                
       
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(Up.isSelected() && Bub.isSelected()){
            String xxx;
            String yyy;
        
        for (int i = 1; i < (CONTI - 1); i++) {
            for (int j = 1; j < (CONTI - 1); j++) {
                float num1=Float.parseFloat(DAG[j].getCANTI());
                float num2=Float.parseFloat(DAG[j + 1].getCANTI());
                if (num1 > num2) {
                    yyy = DAG[j].getCANTI();
                    xxx = DAG[j].getCATO();
                   
                    DAG[j].setCANTI(DAG[j + 1].getCANTI());
                    DAG[j].setCATO(DAG[j + 1].getCATO());
                   
                    DAG[j + 1].setCANTI(yyy);
                    DAG[j + 1].setCATO(xxx);
                   
                }
            }
        }
 System.out.println("DATOS ORDENADOS POR CANTIDAD: ");
        System.out.println("----------");
        for (int i =0; i<CONTI; i++) {
            System.out.println(" CANTIDAD: " + DAG[i].getCANTI());
            System.out.println(" PAÍS: " + DAG[i].getCATO());
           
            System.out.println("----------");
        }
   JFreeChart filas=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DAG[0].getCANTI();
       String X =DAG[0].getCATO();
        titulo=jTextField2.getText();
        for (int i = 1; i < DAG.length-1; i++) {
        float can=Float.parseFloat(DAG[i].getCANTI());
        String cate=DAG[i].getCATO();
        datos.addValue(can, "", cate);
    }
      
       filas=ChartFactory.createBarChart3D(titulo, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
       
       ChartPanel panel = new ChartPanel(filas);
       panel.setPreferredSize(new Dimension(350,150));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint(2);
       try {
            BufferedImage imagen = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen.getGraphics());
            ImageIO.write(imagen, "png", new File("Ordenada.png"));
        } catch (Exception e) {
        }
        }
        else if(Up.isSelected() && Shell.isSelected()){
            int salto, j, k;
            float aaa, eee;
            String yyy;
            String xxx;

            salto = ((CONTI - 1) / 2);
            while (salto > 0) {
                for (int i = salto + 1; i < CONTI; i++) {
                    j = (i - salto);
                    while (j >= 1) {

                        aaa = Float.parseFloat(DAG[j].getCANTI());
                        eee = Float.parseFloat(DAG[j + salto].getCANTI());

                        if (aaa <= eee) {
                            break;
                        } else {
                            yyy = DAG[j].getCANTI();
                            xxx = DAG[j].getCATO();

                            DAG[j].setCANTI(DAG[j + salto].getCANTI());
                            DAG[j].setCATO(DAG[j + salto].getCATO());

                            DAG[j + salto].setCANTI(yyy);
                            DAG[j + salto].setCATO(xxx);
                            j = j - salto;
                        }

                    }
                }
                salto = salto / 2;
            }

            for (int i = 0; i < DAG.length - 1; i++) {
                System.out.println(" CANTIDAD: " + DAG[i].getCANTI());
                System.out.println(" PAÍS: " + DAG[i].getCATO());
                System.out.println("----------");
            }
   JFreeChart filas=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DAG[0].getCANTI();
       String X =DAG[0].getCATO();
        titulo=jTextField2.getText();
        for (int i = 1; i < DAG.length-1; i++) {
        float can=Float.parseFloat(DAG[i].getCANTI());
        String cate=DAG[i].getCATO();
        datos.addValue(can, "", cate);
    }
      
       filas=ChartFactory.createBarChart3D(titulo, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
       
       ChartPanel panel = new ChartPanel(filas);
       panel.setPreferredSize(new Dimension(350,150));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen.getGraphics());
            ImageIO.write(imagen, "png", new File("Ordenada.png"));
        } catch (Exception e) {
        }
        }
        else if (Down.isSelected() && Bub.isSelected()){
             String xxx;
String yyy;
        
        for (int i = 1; i < (CONTI - 1); i++) {
            for (int j = 1; j < (CONTI - 1); j++) {
                float num1=Float.parseFloat(DAG[j].getCANTI());
                float num2=Float.parseFloat(DAG[j + 1].getCANTI());
                if (num1 < num2) {
 
                    yyy = DAG[j].getCANTI();
                    xxx = DAG[j].getCATO();
                    
                    DAG[j].setCANTI(DAG[j + 1].getCANTI());
                    DAG[j].setCATO(DAG[j + 1].getCATO());
                   
                    DAG[j + 1].setCANTI(yyy);
                    DAG[j + 1].setCATO(xxx);
                }
            }
        }
 System.out.println("DATOS ORDENADOS POR CANTIDAD: ");
        System.out.println("----------");
        for (int i =0; i<CONTI; i++) {
            System.out.println(" CANTIDAD: " + DAG[i].getCANTI());
            System.out.println(" PAÍS: " + DAG[i].getCATO());
            System.out.println("----------");
        }
   JFreeChart filas=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DAG[0].getCANTI();
       String X =DAG[0].getCATO();
        titulo=jTextField2.getText();
        for (int i = 1; i < DAG.length-1; i++) {
        float can=Float.parseFloat(DAG[i].getCANTI());
        String cate=DAG[i].getCATO();
        datos.addValue(can, "", cate);
    }
      
       filas=ChartFactory.createBarChart3D(titulo, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
       
       ChartPanel panel = new ChartPanel(filas);
       panel.setPreferredSize(new Dimension(350,150));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen.getGraphics());
            ImageIO.write(imagen, "png", new File("Ordenada.png"));
        } catch (Exception e) {
        }
        }
        else if(Down.isSelected() && Shell.isSelected()){
            int salto, j;
            float aaa, eee;
            String yyy;
            String xxx;

            salto = ((CONTI - 1) / 2);
            while (salto > 0) {
                for (int i = salto + 1; i < CONTI; i++) {
                    j = (i - salto);
                    while (j >= 1) {

                        aaa = Float.parseFloat(DAG[j].getCANTI());
                        eee = Float.parseFloat(DAG[j + salto].getCANTI());

                        if (aaa >= eee) {
                            break;
                        } else {

                            yyy = DAG[j].getCANTI();
                            xxx = DAG[j].getCATO();

                            DAG[j].setCANTI(DAG[j + salto].getCANTI());
                            DAG[j].setCATO(DAG[j + salto].getCATO());

                            DAG[j + salto].setCANTI(yyy);
                            DAG[j + salto].setCATO(xxx);
                            j = j - salto;
                        }

                    }
                }
                salto = salto / 2;
            }

            for (int i = 0; i < DAG.length - 1; i++) {
                System.out.println(" CANTIDAD: " + DAG[i].getCANTI());
                System.out.println(" PAÍS: " + DAG[i].getCATO());
                System.out.println("----------");

            }
   JFreeChart filas=null;
        DefaultCategoryDataset datos=new DefaultCategoryDataset();
       String Y =DAG[0].getCANTI();
       String X =DAG[0].getCATO();
        titulo=jTextField2.getText();
        for (int i = 1; i < DAG.length-1; i++) {
        float can=Float.parseFloat(DAG[i].getCANTI());
        String cate=DAG[i].getCATO();
        datos.addValue(can, "", cate);
    }
       filas=ChartFactory.createBarChart3D(titulo, X, Y, datos, PlotOrientation.VERTICAL, true,true,false);
       
       ChartPanel panel = new ChartPanel(filas);
       panel.setPreferredSize(new Dimension(350,150));
       jPanel2.setLayout(new BorderLayout());
       jPanel2.add(panel,BorderLayout.NORTH);
                pack();
                repaint();
       try {
            BufferedImage imagen = new BufferedImage(jPanel2.getWidth(), jPanel2.getHeight(), BufferedImage.TYPE_INT_ARGB);

            jPanel2.paint(imagen.getGraphics());
            ImageIO.write(imagen, "png", new File("Ordenada.png"));
        } catch (Exception e) {
        }
        }
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void BubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BubActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShellActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        try {
            String SKR="";
            if(Shell.isSelected()){
            SKR="Shellsort";}
            else if(Bub.isSelected()){
            SKR="Bubblesort";
            }
            String ruta = "Reporte.html";
            PrintWriter escritor = new PrintWriter(ruta, "UTF-8");
            escritor.println("<!DOCTYPE HTML>");
            escritor.println("<html>");
            escritor.println("<head>");
            escritor.println("<meta charset= " + " utf-8 " + " > ");
            escritor.println("<title>Reporte: datos </title>");
            escritor.println("</head>");
            
            escritor.println("<H1 "+ " align= " + "center" + ">" + "Reporte de datos</H1>");
            escritor.println("<H2 "+ " align= " + "center" + ">" + " Nombre: Mauricio Antonio Castro Guerra </H2>");
            escritor.println("<H2 "+ " align= " + "center" + ">" + " Carnet: 202100299 </H2>");
            escritor.println("<H3>" + " Se está utilizando el método de ordenamiento:"+ SKR +"<H3>");
            escritor.println("<br>");
           
            escritor.println("<hr "+ "align = " + " center" + " size = " + "4" + " width ="+ " 100% " + "color= " +" White" + " noshade>");
            escritor.println("<br>");
            escritor.println("<br>");
            escritor.print("<div "+ "align =" + "center" + ">");
            escritor.print(" <img " + " src= "+"Desordenada.png" + ">");
            escritor.print("</div>");
            escritor.println("<br>");

            escritor.println("<h1 "+ "align = " + " center>"+"Información Desordenada :</h1>");
            escritor.println("<div style= " + " text-align:center; " + ">");
            escritor.println("<table border= " + " 2 " + " align= " + "center" + " width= " + " 30% "  + " > ");
            escritor.println("<thead>");
            escritor.println("<tr>");
            escritor.println("<th>País</th>");
            escritor.println("<th>Cantidad</th>");
            escritor.println("</tr>");
            escritor.println("</thead>");
            escritor.println("<tbody>	");

            for (int i = 0; i < CONTI; i++) {
                escritor.println("<tr>");
                String cat = AX[i].getCATO();
                escritor.println("<td>" + cat + "</td>");

                String can = AX[i].getCANTI();
                escritor.println("<td>" + can + "</td>");

                escritor.println("</tr>");
            }

            escritor.println("</tbody>");
            escritor.println("</table>");
            escritor.println("</div>");

            escritor.println("<hr "+ "align = " + " center" + " size = " + "4" + " width ="+ " 100% " + "color= " +" White" + " noshade>");
            escritor.println("<br>");

            escritor.println("<h1 "+ "align = " + " center>"+" Información Ordenada : </h1>");
            escritor.println("<div style= " + " text-align: center; " + " > ");
            escritor.println(" <table border= " + "2" + " align= " + "center" +  " width= " + " 30% " + ">");
            escritor.println("<thead>");
            escritor.println("<tr>");
            escritor.println("<th>País</th>");
            escritor.println("<th>Cantidad</th>");
            escritor.println("</tr>");
            escritor.println("</thead>");
            escritor.println("<tbody>	");
            for (int i = 0; i < CONTI; i++) {
                escritor.println("<tr>");
                String cat = DAG[i].getCATO();
                escritor.println("<td>" + cat + "</td>");

                String can = DAG[i].getCANTI();
                escritor.println("<td>" + can + "</td>");

                escritor.println("</tr>");
            }
            escritor.println("</tbody>");

            escritor.println("</table>");
            escritor.println("</div>");

            escritor.println("<br>");

            escritor.println("<br>");
            escritor.print("<div "+ "align =" + "center" + ">");
            escritor.print(" <img " + " src= "+"Ordenada.png" + ">");
            escritor.print("</div>");
            escritor.println("<br>");

            escritor.println("</body>");
            escritor.println("</html>");
            escritor.close();
            JOptionPane.showMessageDialog(null, "Se creó el reporte");
        } catch (Exception e2) {
            e2.getStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MENU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MENU().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Bub;
    private javax.swing.JRadioButton Down;
    private javax.swing.JRadioButton Shell;
    private javax.swing.JRadioButton Up;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
